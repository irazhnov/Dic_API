/**
 * dic-client
 * Move your app forward with the diabetesincontrol API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FeedCategory', 'model/Post'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FeedCategory'), require('./Post'));
  } else {
    // Browser globals (root is window)
    if (!root.DicClient) {
      root.DicClient = {};
    }
    root.DicClient.Feed = factory(root.DicClient.ApiClient, root.DicClient.FeedCategory, root.DicClient.Post);
  }
}(this, function(ApiClient, FeedCategory, Post) {
  'use strict';




  /**
   * The Feed model module.
   * @module model/Feed
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Feed</code>.
   * @alias module:model/Feed
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>Feed</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Feed} obj Optional instance to populate.
   * @return {module:model/Feed} The populated <code>Feed</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('count')) {
        obj['count'] = ApiClient.convertToType(data['count'], 'Number');
      }
      if (data.hasOwnProperty('pages')) {
        obj['pages'] = ApiClient.convertToType(data['pages'], 'Number');
      }
      if (data.hasOwnProperty('category')) {
        obj['category'] = FeedCategory.constructFromObject(data['category']);
      }
      if (data.hasOwnProperty('posts')) {
        obj['posts'] = ApiClient.convertToType(data['posts'], [Post]);
      }
    }
    return obj;
  }

  /**
   * status.
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * count.
   * @member {Number} count
   */
  exports.prototype['count'] = undefined;
  /**
   * pages.
   * @member {Number} pages
   */
  exports.prototype['pages'] = undefined;
  /**
   * @member {module:model/FeedCategory} category
   */
  exports.prototype['category'] = undefined;
  /**
   * @member {Array.<module:model/Post>} posts
   */
  exports.prototype['posts'] = undefined;



  return exports;
}));


